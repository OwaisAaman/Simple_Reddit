{"ast":null,"code":"var _jsxFileName = \"/Users/owaisaamansheikh/Desktop/Simple_Reddit/frontend/src/pages/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [totalUpvotes, setTotalUpvotes] = useState(0);\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/users/your-user-id'); // Replace with actual user ID\n        setUser(response.data.user);\n        setTotalUpvotes(response.data.totalUpvotes);\n      } catch (error) {\n        console.error('Error fetching user profile', error);\n      }\n    };\n    fetchUserProfile();\n  }, []);\n  return user && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: user.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Subscribed Subreddits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: user.subscribedSubreddits.map(subreddit => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: subreddit.name\n      }, subreddit._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upvotes Received\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: totalUpvotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }, this);\n};\n_s(Profile, \"995/yt0tPljRH+qfcQMSmoc6o78=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Profile","_s","user","setUser","totalUpvotes","setTotalUpvotes","fetchUserProfile","response","get","data","error","console","children","username","fileName","_jsxFileName","lineNumber","columnNumber","subscribedSubreddits","map","subreddit","name","_id","_c","$RefreshReg$"],"sources":["/Users/owaisaamansheikh/Desktop/Simple_Reddit/frontend/src/pages/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Profile = () => {\n    const [user, setUser] = useState(null);\n    const [totalUpvotes, setTotalUpvotes] = useState(0);\n\n    useEffect(() => {\n        const fetchUserProfile = async () => {\n            try {\n                const response = await axios.get('http://localhost:5000/api/users/your-user-id'); // Replace with actual user ID\n                setUser(response.data.user);\n                setTotalUpvotes(response.data.totalUpvotes);\n            } catch (error) {\n                console.error('Error fetching user profile', error);\n            }\n        };\n        fetchUserProfile();\n    }, []);\n\n    return (\n        user && (\n            <div>\n                <h2>{user.username}</h2>\n                <h3>Subscribed Subreddits</h3>\n                <ul>\n                    {user.subscribedSubreddits.map(subreddit => (\n                        <li key={subreddit._id}>{subreddit.name}</li>\n                    ))}\n                </ul>\n                <h3>Upvotes Received</h3>\n                <p>{totalUpvotes}</p>\n            </div>\n        )\n    );\n};\n\nexport default Profile;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACZ,MAAMW,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,8CAA8C,CAAC,CAAC,CAAC;QAClFL,OAAO,CAACI,QAAQ,CAACE,IAAI,CAACP,IAAI,CAAC;QAC3BG,eAAe,CAACE,QAAQ,CAACE,IAAI,CAACL,YAAY,CAAC;MAC/C,CAAC,CAAC,OAAOM,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACJ,CAAC;IACDJ,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,OACIJ,IAAI,iBACAH,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAKV,IAAI,CAACW;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBlB,OAAA;MAAAa,QAAA,EAAI;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BlB,OAAA;MAAAa,QAAA,EACKV,IAAI,CAACgB,oBAAoB,CAACC,GAAG,CAACC,SAAS,iBACpCrB,OAAA;QAAAa,QAAA,EAAyBQ,SAAS,CAACC;MAAI,GAA9BD,SAAS,CAACE,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsB,CAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLlB,OAAA;MAAAa,QAAA,EAAI;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBlB,OAAA;MAAAa,QAAA,EAAIR;IAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CACR;AAET,CAAC;AAAChB,EAAA,CAhCID,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AAkCb,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}