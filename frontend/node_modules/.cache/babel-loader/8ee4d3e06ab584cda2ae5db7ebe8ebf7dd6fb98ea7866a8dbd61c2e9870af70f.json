{"ast":null,"code":"var _jsxFileName = \"/Users/owaisaamansheikh/Desktop/Simple_Reddit/frontend/src/components/SubredditList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubredditList = () => {\n  _s();\n  const [subreddits, setSubreddits] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/subreddits').then(response => setSubreddits(response.data)).catch(error => console.log(error));\n  }, []);\n  const handleSubscribe = async subredditId => {\n    try {\n      await axios.post(`http://localhost:5000/api/users/your-user-id/subscribe/${subredditId}`); // Replace with actual user ID\n      alert('Subscribed successfully');\n    } catch (error) {\n      console.error('Subscription failed', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Subreddits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: subreddits.map(subreddit => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/subreddits/${subreddit._id}`,\n          children: subreddit.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSubscribe(subreddit._id),\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, subreddit._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(SubredditList, \"iQMqr1s60j9LHSKwaV9PojDRve8=\");\n_c = SubredditList;\nexport default SubredditList;\nvar _c;\n$RefreshReg$(_c, \"SubredditList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","jsxDEV","_jsxDEV","SubredditList","_s","subreddits","setSubreddits","get","then","response","data","catch","error","console","log","handleSubscribe","subredditId","post","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","map","subreddit","to","_id","name","onClick","_c","$RefreshReg$"],"sources":["/Users/owaisaamansheikh/Desktop/Simple_Reddit/frontend/src/components/SubredditList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst SubredditList = () => {\n    const [subreddits, setSubreddits] = useState([]);\n\n    useEffect(() => {\n        axios.get('http://localhost:5000/api/subreddits')\n            .then(response => setSubreddits(response.data))\n            .catch(error => console.log(error));\n    }, []);\n\n    const handleSubscribe = async (subredditId) => {\n        try {\n            await axios.post(`http://localhost:5000/api/users/your-user-id/subscribe/${subredditId}`); // Replace with actual user ID\n            alert('Subscribed successfully');\n        } catch (error) {\n            console.error('Subscription failed', error);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Subreddits</h2>\n            <ul>\n                {subreddits.map(subreddit => (\n                    <li key={subreddit._id}>\n                        <Link to={`/subreddits/${subreddit._id}`}>{subreddit.name}</Link>\n                        <button onClick={() => handleSubscribe(subreddit._id)}>Subscribe</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default SubredditList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZE,KAAK,CAACQ,GAAG,CAAC,sCAAsC,CAAC,CAC5CC,IAAI,CAACC,QAAQ,IAAIH,aAAa,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC9CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,eAAe,GAAG,MAAOC,WAAW,IAAK;IAC3C,IAAI;MACA,MAAMjB,KAAK,CAACkB,IAAI,CAAC,0DAA0DD,WAAW,EAAE,CAAC,CAAC,CAAC;MAC3FE,KAAK,CAAC,yBAAyB,CAAC;IACpC,CAAC,CAAC,OAAON,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C;EACJ,CAAC;EAED,oBACIV,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBrB,OAAA;MAAAiB,QAAA,EACKd,UAAU,CAACmB,GAAG,CAACC,SAAS,iBACrBvB,OAAA;QAAAiB,QAAA,gBACIjB,OAAA,CAACF,IAAI;UAAC0B,EAAE,EAAE,eAAeD,SAAS,CAACE,GAAG,EAAG;UAAAR,QAAA,EAAEM,SAAS,CAACG;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACjErB,OAAA;UAAQ2B,OAAO,EAAEA,CAAA,KAAMd,eAAe,CAACU,SAAS,CAACE,GAAG,CAAE;UAAAR,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFpEE,SAAS,CAACE,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGlB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACnB,EAAA,CA/BID,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAiCnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}