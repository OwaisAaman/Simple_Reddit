{"ast":null,"code":"var _jsxFileName = \"/Users/owaisaamansheikh/Desktop/Simple_Reddit/frontend/src/pages/Subreddit.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Subreddit = () => {\n  _s();\n  const {\n    subredditId\n  } = useParams();\n  const [subreddit, setSubreddit] = useState(null);\n  useEffect(() => {\n    const fetchSubreddit = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/subreddits/${subredditId}`);\n        setSubreddit(response.data);\n      } catch (error) {\n        console.error('Error fetching subreddit', error);\n      }\n    };\n    fetchSubreddit();\n  }, [subredditId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: subreddit && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: subreddit.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/create-post/${subredditId}`,\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: subreddit.posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/images/post${post._id % 4 + 1}.png`,\n            alt: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/posts/${post._id}`,\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Upvotes: \", post.upvotes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this)]\n        }, post._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Subreddit, \"me2rDgvmxAHyuQFapdgVyRCX73I=\", false, function () {\n  return [useParams];\n});\n_c = Subreddit;\nexport default Subreddit;\nvar _c;\n$RefreshReg$(_c, \"Subreddit\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","Link","jsxDEV","_jsxDEV","Subreddit","_s","subredditId","subreddit","setSubreddit","fetchSubreddit","response","get","data","error","console","children","name","fileName","_jsxFileName","lineNumber","columnNumber","to","posts","map","post","src","_id","alt","title","content","upvotes","_c","$RefreshReg$"],"sources":["/Users/owaisaamansheikh/Desktop/Simple_Reddit/frontend/src/pages/Subreddit.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams, Link } from 'react-router-dom';\n\nconst Subreddit = () => {\n    const { subredditId } = useParams();\n    const [subreddit, setSubreddit] = useState(null);\n\n    useEffect(() => {\n        const fetchSubreddit = async () => {\n            try {\n                const response = await axios.get(`http://localhost:5000/api/subreddits/${subredditId}`);\n                setSubreddit(response.data);\n            } catch (error) {\n                console.error('Error fetching subreddit', error);\n            }\n        };\n        fetchSubreddit();\n    }, [subredditId]);\n\n    return (\n        <div>\n            {subreddit && (\n                <div>\n                    <h2>{subreddit.name}</h2>\n                    <Link to={`/create-post/${subredditId}`}>Create Post</Link>\n                    <ul>\n                        {subreddit.posts.map(post => (\n                            <li key={post._id}>\n                                <img src={`/images/post${post._id % 4 + 1}.png`} alt={post.title} />\n                                <Link to={`/posts/${post._id}`}>{post.title}</Link>\n                                <p>{post.content}</p>\n                                <p>Upvotes: {post.upvotes}</p>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Subreddit;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAY,CAAC,GAAGN,SAAS,CAAC,CAAC;EACnC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZ,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,wCAAwCL,WAAW,EAAE,CAAC;QACvFE,YAAY,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IACDJ,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAACH,WAAW,CAAC,CAAC;EAEjB,oBACIH,OAAA;IAAAY,QAAA,EACKR,SAAS,iBACNJ,OAAA;MAAAY,QAAA,gBACIZ,OAAA;QAAAY,QAAA,EAAKR,SAAS,CAACS;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzBjB,OAAA,CAACF,IAAI;QAACoB,EAAE,EAAE,gBAAgBf,WAAW,EAAG;QAAAS,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC3DjB,OAAA;QAAAY,QAAA,EACKR,SAAS,CAACe,KAAK,CAACC,GAAG,CAACC,IAAI,iBACrBrB,OAAA;UAAAY,QAAA,gBACIZ,OAAA;YAAKsB,GAAG,EAAE,eAAeD,IAAI,CAACE,GAAG,GAAG,CAAC,GAAG,CAAC,MAAO;YAACC,GAAG,EAAEH,IAAI,CAACI;UAAM;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpEjB,OAAA,CAACF,IAAI;YAACoB,EAAE,EAAE,UAAUG,IAAI,CAACE,GAAG,EAAG;YAAAX,QAAA,EAAES,IAAI,CAACI;UAAK;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACnDjB,OAAA;YAAAY,QAAA,EAAIS,IAAI,CAACK;UAAO;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBjB,OAAA;YAAAY,QAAA,GAAG,WAAS,EAACS,IAAI,CAACM,OAAO;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAJzBI,IAAI,CAACE,GAAG;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKb,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACf,EAAA,CApCID,SAAS;EAAA,QACaJ,SAAS;AAAA;AAAA+B,EAAA,GAD/B3B,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}