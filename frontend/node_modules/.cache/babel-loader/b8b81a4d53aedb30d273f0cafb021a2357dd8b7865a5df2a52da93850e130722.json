{"ast":null,"code":"var _jsxFileName = \"/Users/owaisaamansheikh/Desktop/Simple_Reddit/frontend/src/components/Post.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = () => {\n  _s();\n  const {\n    postId\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [comment, setComment] = useState('');\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/posts/${postId}`).then(response => setPost(response.data)).catch(error => console.log(error));\n  }, [postId]);\n  const handleUpvote = () => {\n    axios.post(`http://localhost:5000/api/posts/${postId}/upvote`).then(response => setPost(response.data)).catch(error => console.log(error));\n  };\n  const handleComment = () => {\n    axios.post(`http://localhost:5000/api/comments`, {\n      content: comment,\n      post: postId\n    }).then(response => setPost({\n      ...post,\n      comments: [...post.comments, response.data]\n    })).catch(error => console.log(error));\n  };\n  return post && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Upvotes: \", post.upvotes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpvote,\n      children: \"Upvote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: post.comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: comment.content\n      }, comment._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: comment,\n      onChange: e => setComment(e.target.value),\n      placeholder: \"Add a comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleComment,\n      children: \"Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this);\n};\n_s(Post, \"STmJsilChN3V+ylgD5sX6h4BwNQ=\", false, function () {\n  return [useParams];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","jsxDEV","_jsxDEV","Post","_s","postId","post","setPost","comment","setComment","get","then","response","data","catch","error","console","log","handleUpvote","handleComment","content","comments","children","title","fileName","_jsxFileName","lineNumber","columnNumber","upvotes","onClick","map","_id","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/owaisaamansheikh/Desktop/Simple_Reddit/frontend/src/components/Post.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nconst Post = () => {\n    const { postId } = useParams();\n    const [post, setPost] = useState(null);\n    const [comment, setComment] = useState('');\n\n    useEffect(() => {\n        axios.get(`http://localhost:5000/api/posts/${postId}`)\n            .then(response => setPost(response.data))\n            .catch(error => console.log(error));\n    }, [postId]);\n\n    const handleUpvote = () => {\n        axios.post(`http://localhost:5000/api/posts/${postId}/upvote`)\n            .then(response => setPost(response.data))\n            .catch(error => console.log(error));\n    };\n\n    const handleComment = () => {\n        axios.post(`http://localhost:5000/api/comments`, { content: comment, post: postId })\n            .then(response => setPost({ ...post, comments: [...post.comments, response.data] }))\n            .catch(error => console.log(error));\n    };\n\n    return (\n        post && (\n            <div>\n                <h2>{post.title}</h2>\n                <p>{post.content}</p>\n                <p>Upvotes: {post.upvotes}</p>\n                <button onClick={handleUpvote}>Upvote</button>\n                <h3>Comments</h3>\n                <ul>\n                    {post.comments.map(comment => (\n                        <li key={comment._id}>{comment.content}</li>\n                    ))}\n                </ul>\n                <input type=\"text\" value={comment} onChange={(e) => setComment(e.target.value)} placeholder=\"Add a comment\" />\n                <button onClick={handleComment}>Comment</button>\n            </div>\n        )\n    );\n};\n\nexport default Post;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}